# CMake project for Linux, macOS, and Windows located under the `compiler` directory.
name: CMake on multiple platforms

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    if: "!startsWith(github.event.pull_request.title, 'WIP')"
    runs-on: ${{ matrix.os }}
    container:
      image: ${{ matrix.container }}
      options: --user root -v "/etc/apt/sources.list:/etc/apt/sources.list:ro"
    strategy:
      matrix:
        include:
          # Linux with GCC
          - os: self-hosted
            c_compiler: gcc
            cpp_compiler: g++
            container: mcr.microsoft.com/devcontainers/cpp:debian-12
            nproc: 7
          # Linux with Clang
          - os: self-hosted
            c_compiler: clang-16
            cpp_compiler: clang++-16
            container: mcr.microsoft.com/devcontainers/cpp:debian-12
            nproc: 7
          # macOS with Clang
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            container: null
            nproc: 2

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: matrix.os == 'self-hosted'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build flex bison libspdlog-dev libboost-graph-dev libboost-program-options-dev libgtest-dev ${{ matrix.c_compiler }}

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake ninja boost spdlog flex bison googletest tree

      - name: Configure CMake
        run: |
          cmake -B compiler/build -S compiler \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -G Ninja
        shell: bash

      - name: Build
        run: cmake --build compiler/build --config ${{env.BUILD_TYPE}} -- -j${{ matrix.nproc }}
        shell: bash

      - name: Test
        working-directory: compiler/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
        shell: bash
